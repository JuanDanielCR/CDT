package mx.edu.eld.admision.action;

import com.opensymphony.xwork2.ModelDriven;
import com.opensymphony.xwork2.validator.annotations.VisitorFieldValidator;
import mx.edu.eld.admision.bs.DireccionBs;
import mx.edu.eld.admision.mapeo.DireccionAspirante;
import mx.edu.eld.sepomex.mapeo.CodigoPostal;
import mx.edu.eld.sepomex.mapeo.Entidad;
import mx.edu.eld.sepomex.mapeo.Municipio;
import mx.ipn.escom.cdt.util.action.ActionSupportCDT;
import mx.ipn.escom.cdt.util.action.Error;
import mx.ipn.escom.cdt.util.bs.GenericSearchBs;
import org.apache.struts2.convention.annotation.AllowedMethods;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.apache.struts2.interceptor.validation.SkipValidation;
import org.apache.struts2.json.annotations.JSON;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.ArrayList;
import java.util.List;

@Namespace("/admision")
@AllowedMethods({ "direccionCp", "otraColonia" })
@Results({
		@Result(name = "success", type = "redirectAction", params = { "actionName",
				"../admision/registrar-aspirante" }),
		@Result(name = "ERROR", type = "json", params = { "root", "action", "includeProperties", "result.*" }) })
public class GestionarDireccionAct extends ActionSupportCDT implements ModelDriven<DireccionAspirante> {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;

	private Integer idAspiranteSel;

	private Entidad entidad;

	private Municipio municipio;

	private CodigoPostal codigoPostal;

	private DireccionAspirante model;

	private String idEntidad;

	private String idMunicipio;

	private String idCP;

	private List<Entidad> listEntidad;

	private List<Municipio> listMunicipio;

	private List<CodigoPostal> listCodigoPostal;

	private List<CodigoPostal> colonias;

	/*
	 * Nos permite gestionar los errores de AJAX
	 */
	private Error error;

	@Autowired
	private GenericSearchBs genericSearchBs;

	@Autowired
	private DireccionBs direccionBs;

	public String editNew() {
		poblarEntidad();
		colonias = new ArrayList<CodigoPostal>();
		return EDITNEW;
	}

	public void validateCreate() {
		if (getFieldErrors().isEmpty() != true) {
			System.err.println("Hay errores de campo");
			error = new Error();
			error.setListErrores(getFieldErrors());
		} else {
			System.err.println("No hay errores de campo");
		}
		System.err.println(getFieldErrors());
		System.err.println(getActionErrors());

	}

	public String create() {
		if (error.isEmpty()) {
			direccionBs.agregarDireccion(model);
			return SUCCESS;
		} else {
			return ERROR;
		}
	}

	@SkipValidation
	public String direccionCp() {
		System.err.println("===>Codigo Postal recibido: " + idCP);
		entidad = direccionBs.obtenerEntidad(idCP);
		municipio = direccionBs.obtenerMunicipio(idCP);
		colonias = direccionBs.obtenerColonias(idCP);
		return "direccionCp";
	}

	public List<CodigoPostal> getColonias() {
		return colonias;
	}

	public void setColonias(List<CodigoPostal> colonias) {
		this.colonias = colonias;
	}

	public DireccionBs getDireccionBs() {
		return direccionBs;
	}

	public void setDireccionBs(DireccionBs direccionBs) {
		this.direccionBs = direccionBs;
	}

	public String getIdMunicipio() {
		return idMunicipio;
	}

	public void setIdMunicipio(String idMunicipio) {
		this.idMunicipio = idMunicipio;
	}

	public List<CodigoPostal> getListCodigoPostal() {
		return listCodigoPostal;
	}

	public void setListCodigoPostal(List<CodigoPostal> listCodigoPostal) {
		this.listCodigoPostal = listCodigoPostal;
	}

	public Integer getIdAspiranteSel() {
		return idAspiranteSel;
	}

	public void setIdAspiranteSel(Integer idAspiranteSel) {
		this.idAspiranteSel = idAspiranteSel;
	}

	public CodigoPostal getCodigoPostal() {
		return codigoPostal;
	}

	public void setCodigoPostal(CodigoPostal codigoPostal) {
		this.codigoPostal = codigoPostal;
	}

	private void poblarEntidad() {
		listEntidad = genericSearchBs.findAll(Entidad.class);
	}

	public String getIdCP() {
		return idCP;
	}

	public void setIdCP(String idCP) {
		this.idCP = idCP;
	}

	public List<Municipio> getListMunicipio() {
		return listMunicipio;
	}

	public void setListMunicipio(List<Municipio> listMunicipio) {
		this.listMunicipio = listMunicipio;
	}

	public Municipio getMunicipio() {
		return municipio;
	}

	public void setMunicipio(Municipio municipio) {
		this.municipio = municipio;
	}

	public List<Entidad> getListEntidad() {
		return listEntidad;
	}

	public void setListEntidad(List<Entidad> listEntidad) {
		this.listEntidad = listEntidad;
	}

	public Entidad getEntidad() {
		return entidad;
	}

	public void setEntidad(Entidad entidad) {
		this.entidad = entidad;
	}

	@VisitorFieldValidator
	public DireccionAspirante getModel() {
		if (model == null) {
			model = new DireccionAspirante();
		}
		return model;
	}

	public void setModel(DireccionAspirante model) {
		this.model = model;
	}

	public GenericSearchBs getGenericSearchBs() {
		return genericSearchBs;
	}

	public void setGenericSearchBs(GenericSearchBs genericSearchBs) {
		this.genericSearchBs = genericSearchBs;
	}

	public String getIdEntidad() {
		return idEntidad;
	}

	public void setIdEntidad(String idEntidad) {
		this.idEntidad = idEntidad;
	}

	@JSON(name = "result")
	public Error getError() {
		return error;
	}

	public void setError(Error error) {
		this.error = error;
	}

}
